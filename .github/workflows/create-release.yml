name: Create Release

on:
  workflow_run:
    workflows: ["Python Tests"]
    types: [completed]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install Poetry
        run: pip install poetry
      - name: Get project version
        id: getVersion
        run: |
          version=$(poetry version -s)
          echo "version=$version" >> "$GITHUB_OUTPUT"
      - name: Check for existing release
        id: checkRelease
        run: |
          git fetch --tags
          if git rev-parse "v${{ steps.getVersion.outputs.version }}" >/dev/null 2>&1; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Create GitHub Release
        if: steps.checkRelease.outputs.exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.getVersion.outputs.version }}
          release_name: v${{ steps.getVersion.outputs.version }}
          draft: false
          prerelease: false
      - name: Trigger PyPI publish
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'python-publish.yml',
              ref: context.ref,
            });
